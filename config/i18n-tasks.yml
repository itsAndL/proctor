# i18n-tasks finds and manages missing and unused translations: https://github.com/glebm/i18n-tasks

# The "main" locale.
base_locale: en
## All available locales are inferred from the data by default. Alternatively, specify them explicitly:
locales: [en, fr, es, de]
## Reporting locale, default: en. Available: en, ru.
# internal_locale: en

# Read and write translations.
data:
  ## Translations are read from the file system. Supported format: YAML, JSON.
  ## Provide a custom adapter:
  # adapter: I18n::Tasks::Data::FileSystem

  # Locale files or `Dir.glob` patterns where translations are read from:
  read:
    # Default:
    - config/locales/%{locale}.yml
    ## More files:
    - config/locales/*.%{locale}.yml
    - config/locales/components/%{locale}.yml
    - config/locales/devise/%{locale}.yml
    - config/locales/mailer/%{locale}.yml
    - config/locales/localization/%{locale}.yml
    - config/locales/activerecord/%{locale}.yml


  # Locale files to write new keys to, based on a list of key pattern => file rules. Matched from top to bottom:
  # `i18n-tasks normalize -p` will force move the keys according to these rules
  
  router: conservative_router
  write:
    # - ['devise.*', 'config/locales/devise/%{locale}.yml']
    # - ['activerecord.*', 'config/locales/activerecord/%{locale}.yml']
    # - ['{*}_component.*', 'config/locales/components/%{locale}.yml']
    # - ['{date,number,time,datetime,support,duration,date,shared,helpers,flash,alert,errors}.*', 'config/locales/localization/%{locale}.yml']
    # - ['{of,or}', 'config/locales/localization/%{locale}.yml']
    # - ['{*}_mailer.*', 'config/locales/mailer/%{locale}.yml']
    - 'config/locales/%{locale}.yml'


  # External locale data (e.g. gems).
  # This data is not considered unused and is never written to.
  external:
    ## Example (replace %#= with %=):
    # - "<%#= %x[bundle info vagrant --path].chomp %>/templates/locales/%{locale}.yml"

  ## Specify the router (see Readme for details). Valid values: conservative_router, pattern_router, or a custom class.
  # router: conservative_router

  yaml:
    write:
      # do not wrap lines at 80 characters
      line_width: -1

  ## Pretty-print JSON:
  # json:
  #   write:
  #     indent: '  '
  #     space: ' '
  #     object_nl: "\n"
  #     array_nl: "\n"

# Find translate calls
search:
  ## Paths or `Find.find` patterns to search in:
  # paths:
  #   app/
  ## Root directories for relative keys resolution.
  relative_roots:
    - app/components
    - app/controllers
    - app/helpers
    - app/mailers
    - app/presenters
    - app/views
    - app/services

  ## Directories where method names which should not be part of a relative key resolution.
  # By default, if a relative translation is used inside a method, the name of the method will be considered part of the resolved key.
  # Directories listed here will not consider the name of the method part of the resolved key
  #
  # relative_exclude_method_name_paths:
  #  -

  ## Files or `File.fnmatch` patterns to exclude from search. Some files are always excluded regardless of this setting:
  ##   *.jpg *.jpeg *.png *.gif *.svg *.ico *.eot *.otf *.ttf *.woff *.woff2 *.pdf *.css *.sass *.scss *.less
  ##   *.yml *.json *.zip *.tar.gz *.swf *.flv *.mp3 *.wav *.flac *.webm *.mp4 *.ogg *.opus *.webp *.map *.xlsx
  exclude:
    - app/assets/images
    - app/assets/fonts
    - app/assets/videos
    - app/assets/builds

  ## Alternatively, the only files or `File.fnmatch patterns` to search in `paths`:
  ## If specified, this settings takes priority over `exclude`, but `exclude` still applies.
  only: ["*.rb", "*.html.erb", "*.html.haml", "*.html.slim"]

  ## If `strict` is `false`, guess usages such as t("categories.#{category}.title"). The default is `true`.
  strict: false

  ## Allows adding ast_matchers for finding translations using the AST-scanners
  ## The available matchers are:
  ## - RailsModelMatcher
  ##     Matches ActiveRecord translations like
  ##     User.human_attribute_name(:email) and User.model_name.human
  ## - DefaultI18nSubjectMatcher
  ##     Matches ActionMailer's default_i18n_subject method
  ##
  ## To implement your own, please see `I18n::Tasks::Scanners::AstMatchers::BaseMatcher`.
  # ast_matchers:
  #   - 'I18n::Tasks::Scanners::AstMatchers::RailsModelMatcher'
  #   - 'I18n::Tasks::Scanners::AstMatchers::DefaultI18nSubjectMatcher'

  ## Multiple scanners can be used. Their results are merged.
  ## The options specified above are passed down to each scanner. Per-scanner options can be specified as well.
  ## See this example of a custom scanner: https://github.com/glebm/i18n-tasks/wiki/A-custom-scanner-example

ignore_missing:
  - 'i18n_tasks.*'
  - 'i18n.transliterate.*'


## Consider these keys used:
ignore_unused:
  - 'i18n_tasks.*'
  - 'activerecord.attributes.*'
  - 'activerecord.enums.*'
  - 'number.*'
  - 'date.*'
  - 'time.*'
  - 'datetime.*'
  - 'i18n.transliterate.*'
  - 'errors.*'
  - 'activerecord.errors.*'
  - 'support.*'
  - 'or'
  - 'helpers.*'
  - '{devise,kaminari,will_paginate}.*'
# - 'simple_form.{yes,no}'
# - 'simple_form.{placeholders,hints,labels}.*'
# - 'simple_form.{error_notification,required}.:'

## Exclude these keys from the `i18n-tasks eq-base' report:
# ignore_eq_base:
#   all:
#     - common.ok
#   fr,es:
#     - common.brand

## Exclude these keys from the `i18n-tasks check-consistent-interpolations` report:
# ignore_inconsistent_interpolations:
# - 'activerecord.attributes.*'

## Ignore these keys completely:
ignore:
 - kaminari.*

## Sometimes, it isn't possible for i18n-tasks to match the key correctly,
## e.g. in case of a relative key defined in a helper method.
## In these cases you can use the built-in PatternMapper to map patterns to keys, e.g.:
#
# <%# I18n::Tasks.add_scanner 'I18n::Tasks::Scanners::PatternMapper',
#       only: %w(*.html.haml *.html.slim),
#       patterns: [['= title\b', '.page_title']] %>
#
# The PatternMapper can also match key literals via a special %{key} interpolation, e.g.:
#
<%# I18n::Tasks.add_scanner 'I18n::Tasks::Scanners::PatternMapper',only: %w(/app/components/*.rb), patterns: [['\bSpree\.t[( ]\s*%{key}']] %>